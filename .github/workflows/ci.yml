name: Continuous integration
on: [push, pull_request]
jobs:
  ci-windows:
    name: Build and test on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: run
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -- --help
      - name: release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      # lint already runs on Linux and check is not needed as already happens while building
      - name: Cleanup docker
        run: |
          mkdir C:\docker-data
          Set-Content -Value "`{`"data-root`":`"C:\\docker-data`"`}" -Path C:\ProgramData\docker\config\daemon.json
          Restart-Service docker
        shell: powershell
      - name: Run integration tests
        run: |
          WINDOWS=true ./integration_test.sh
        shell: bash

  ci:
    name: Build and test on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
      with:
        username: stephanmisc
        password: ${{ secrets.DOCKER_PASSWORD }}
      if: github.event_name == 'push'
    - uses: stepchowfun/toast/.github/actions/toast@main
      with:
        tasks: build check test lint run release
        repo: stephanmisc/toast
        write_remote_cache: ${{ github.event_name == 'push' }}

    # [tag:integration_test_step]
    - name: Run integration tests
      run: >-
        docker run \
          --privileged \
          --name dind \
          --detach \
          --volume "$PWD/artifacts:/artifacts" \
          docker:dind
        docker exec dind apk add bash
        docker cp integration_test.sh dind:/
        docker exec dind ./integration_test.sh
        docker rm --force dind
