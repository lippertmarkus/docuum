name: Docker Image

on:
  push:
    tags:
      - v*
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    name: Build & push for Linux
    runs-on: ubuntu-latest
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      - name: Determine image name
        id: img
        env:
          DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi

          echo "::set-output name=image_name::${DOCKERHUB_ORG}/docuum:${tag}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.img.outputs.image_name }}
          file: ./Dockerfile.unix
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64  # all currently supported architectures of rust image
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-windows:
    name: Build & push for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        env:
          DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi

          image_name="${DOCKERHUB_ORG}/docuum:${tag}-windows"
          docker build -t $image_name -f Dockerfile.windows .
          docker push $image_name
        shell: bash

  merge-manifests:
    name: Merge manifests for Linux and Windows
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Merge manifests
        env:
          DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo $(jq -c '. + { "experimental": "enabled" }' ${DOCKER_CONFIG}/config.json) > ${DOCKER_CONFIG}/config.json

          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi

          base_image="${DOCKERHUB_ORG}/docuum"
          image_name="${base_image}:${tag}"

          digests=$(echo $(docker manifest inspect $image_name) | jq '.manifests[].digest' -r)

          docker manifest create $image_name ${image_name}-windows $(echo "${digests//sha256:/${base_image}@sha256:}")
          docker manifest push $image_name